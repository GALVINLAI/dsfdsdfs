############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
# \u8BBE\u7F6E\u5904\u7406\u5668\u4E3AConsoleHandler\uFF0C\uFF0C\u5982\u679C\u60F3\u8981\u6DFB\u52A0\u5176\u4ED6\u5904\u7406\u5668\uFF0C\u5728\u5F53\u524D\u5904\u7406\u5668\u540E\u9762\u901A\u8FC7\u9017\u53F7\u9694\u5F00\u5373\u53EF\uFF0C
## \u5982\uFF1Ahandlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler
handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
# \u8BBE\u7F6E\u5168\u5C40\u65E5\u5FD7\u7EA7\u522B\u4E3AINFO\uFF08\u9ED8\u8BA4\uFF09
.level= INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
# \u5904\u7406\u5668\u7684\u5177\u4F53\u914D\u7F6E\u4FE1\u606F
# \u65E5\u5FD7\u6587\u4EF6\u540D\uFF1Ajava%u.log\uFF0C\u5176\u4E2D%u\u8868\u793A\u7528\u6237\u7684id\uFF0C\u5982java123.log
java.util.logging.FileHandler.pattern = %h/java%u.log
# \u65E5\u5FD7\u6587\u4EF6\u5927\u5C0F\uFF1A50KB
java.util.logging.FileHandler.limit = 50000
# \u65E5\u5FD7\u6587\u4EF6\u4E2A\u6570\uFF1A1\u4E2A
java.util.logging.FileHandler.count = 1
# \u65E5\u5FD7\u683C\u5F0F\uFF1AXML\u683C\u5F0F
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Limit the message that are printed on the console to INFO and above.
# \u8BBE\u7F6E\u63A7\u5236\u53F0\u65E5\u5FD7\u7EA7\u522B\u4E3AINFO
java.util.logging.ConsoleHandler.level = INFO
# \u8BBE\u7F6E\u63A7\u5236\u53F0\u65E5\u5FD7\u683C\u5F0F
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Example to customize the SimpleFormatter output format 
# to print one-line log message like this:
#     <level>: <log message> [<date/time>]
#
# java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE \u4F8B\u5982\uFF0C\u5C06 com.xyz.foo \u8BB0\u5F55\u5668\u8BBE\u7F6E\u4E3A\u4EC5\u8BB0\u5F55 SEVERE
# messages:
# \u8BBE\u7F6Ecom.xyz.foo\u65E5\u5FD7\u7EA7\u522B\u4E3ASEVERE
com.xyz.foo.level = SEVERE
